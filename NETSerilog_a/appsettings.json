{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  //Default ayarlar serilog etiketi altında başlatılır. Değiştirilmek istenirse 
  //Program.cs üzerinde gerekli ayarların yapılması gerekir.
  //.ReadFrom.Configuration(configuration, sectionName: "CustomSection").CreateLogger();,
  "Serilog": {
    //Serilog'un loglama yapacağı sink platformları namespace olarak eklenmelidir.
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Sinks.Seq" ],
    //Etkinlik seviyelerininden birini minimum seviye olarak uygulamamızı sağlar.
    "MinimumLevel": "Information",
    //WriteTo Log verilerinin hangi sink'e yazdırılacağı burda belirtilir.
    "WriteTo": [
      { "Name": "Console" },
      {
        "Name": "Seq",
        "Args": {
          "serverUrl": "http://localhost:5341",
          "apiKey": "mZyepES0DGbWZLsC6lwr"
        }
      },
      {
        "Name": "File",
        "Args": { "path": "Logs/log.txt" }
      }
      
    ],
    //Bir log eventında dinamik olarak özellik eklememizi sağlar.
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ],
    //Soyut parametre türlerini belirlememizi sağlar.
    "Destructure": [
      {
        "Name": "ToMaximumDepth",
        "Args": { "maximumDestructuringDepth": 4 }
      },
      {
        "Name": "ToMaximumStringLength",
        "Args": { "maximumStringLength": 100 }
      },
      {
        "Name": "ToMaximumCollectionCount",
        "Args": { "maximumCollectionCount": 10 }
      }
    ],
    //Uygulama hakkında genel tanımlamaları yapmamızı sağlar.
    "Properties": {
      "Applicaton": "Sample"
    }
  }
}
